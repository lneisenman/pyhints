{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Organizing data with the Pandas *groupby* function"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For this example we will assume and experiment comparing the effect of a drug on wildtype and mutant animal. There are two measurements for each animal prior to and after drug treatment. We will start with the data in [tidy format](https://en.wikipedia.org/wiki/Tidy_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   animal genotype  condition  measurement  value\n",
      "0       1       WT   baseline            1    0.9\n",
      "1       1       WT   baseline            2    1.1\n",
      "2       1       WT  treatment            1    1.8\n",
      "3       1       WT  treatment            2    2.2\n",
      "4       2       WT   baseline            1    0.8\n"
     ]
    }
   ],
   "source": [
    "df = pd.read_csv('groupby_data.csv')\n",
    "print(df.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We'd like to compare treatment to baseline in both the WT and mutant animals. The [Pandas](https://pandas.pydata.org/) *groupby* function will organize the data for us and the resulting data structure has a *get_group* function that will allow us to access the data for each of the four groups"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   animal genotype condition  measurement  value\n",
      "0       1       WT  baseline            1    0.9\n",
      "1       1       WT  baseline            2    1.1\n",
      "4       2       WT  baseline            1    0.8\n",
      "5       2       WT  baseline            2    1.2\n"
     ]
    }
   ],
   "source": [
    "grouped = df.groupby(['genotype', 'condition'])\n",
    "wt_baseline = grouped.get_group(('WT', 'baseline'))\n",
    "print(wt_baseline.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The *groupby* data structure has [methods](http://pandas.pydata.org/pandas-docs/stable/groupby.html#groupby-object-attributes) for basic data analysis. We could use the *mean* and *std* methods which generate new dataframes, each with a [multiIndex](http://pandas.pydata.org/pandas-docs/stable/advanced.html). In these dataframes, the value column now represents the mean (std) of the corresponding category of animals. However, there is an *agg* function that creates a single dataframe with columns corresponding to an arbitrary list of functions. We'll use it with both the *mean* and *std* functions. With the multiIndex, accessing sections of the data is relatively easy."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                    mean       std\n",
      "genotype condition                \n",
      "WT       baseline    1.0  0.182574\n",
      "         treatment   2.0  0.365148\n",
      "mutant   baseline    2.0  0.230940\n",
      "         treatment   2.0  0.461880\n",
      "\n",
      "The WT baseline mean is 1.0\n",
      "\n",
      "condition\n",
      "baseline     1.0\n",
      "treatment    2.0\n",
      "Name: mean, dtype: float64\n",
      "\n",
      "genotype\n",
      "WT        0.182574\n",
      "mutant    0.230940\n",
      "Name: std, dtype: float64\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x98bae48>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "summary = grouped['value'].agg([np.mean, np.std])\n",
    "print(summary.head())\n",
    "print()\n",
    "print('The WT baseline mean is', summary.loc[('WT','baseline')]['mean'])\n",
    "print()\n",
    "print(summary.loc[('WT',)]['mean'])  # THe loc method provides easy access to the top level of the multiIndex\n",
    "print()\n",
    "print(summary.xs('baseline', level=1)['std'])  # need the xs method to access sublevels of the multiIndex\n",
    "print()\n",
    "\n",
    "summary.plot.bar(y='mean', yerr='std', capsize=3, legend=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In some cases, it is better to create dataframes with labelled columns rather than a MultiIndex. For example, categorical plots in [Seaborn](https://seaborn.pydata.org/) work better without the MultiIndex.\n",
    "\n",
    "This can be accomplished by passing the parameter *as_index=False* to the *groupby* function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  genotype  condition  animal  measurement  value\n",
      "0       WT   baseline     1.5          1.5    1.0\n",
      "1       WT  treatment     1.5          1.5    2.0\n",
      "2   mutant   baseline     3.5          1.5    2.0\n",
      "3   mutant  treatment     3.5          1.5    2.0\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x9970780>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "mean2 = df.groupby(['genotype', 'condition'], as_index=False).mean()\n",
    "print(mean2.head())\n",
    "sns.pointplot(x='condition', y='value', hue='genotype', data=mean2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If the dataframe has already been created with a MultiIndex, the *reset_index* method can be used to go back to labelled columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  genotype  condition  mean       std\n",
      "0       WT   baseline   1.0  0.182574\n",
      "1       WT  treatment   2.0  0.365148\n",
      "2   mutant   baseline   2.0  0.230940\n",
      "3   mutant  treatment   2.0  0.461880\n",
      "                    mean       std\n",
      "genotype condition                \n",
      "WT       baseline    1.0  0.182574\n",
      "         treatment   2.0  0.365148\n",
      "mutant   baseline    2.0  0.230940\n",
      "         treatment   2.0  0.461880\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0xaa09400>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "summary2 = summary.reset_index()\n",
    "print(summary2.head())\n",
    "print(summary.head())\n",
    "sns.pointplot(x='condition', y='mean', capsize=3, hue='genotype', data=summary2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Of course, if all you wanted were the graphs, [Seaborn](https://seaborn.pydata.org/) can do that without any of the above analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\eisenmanl\\AppData\\Local\\Continuum\\miniconda3\\lib\\site-packages\\scipy\\stats\\stats.py:1713: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.\n",
      "  return np.add.reduce(sorted[indexer] * weights, axis=axis) / sumval\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0xaab60b8>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1, 2, figsize=(12, 5))\n",
    "sns.pointplot(x='condition', y='value', hue='genotype', ax=ax[0], data=df)\n",
    "sns.barplot(x='condition', y='value', hue='genotype', capsize=0.1, ax=ax[1], data=df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
